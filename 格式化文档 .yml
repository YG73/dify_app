app:
  description: ''
  icon: scream
  icon_background: '#FFEAD5'
  mode: workflow
  name: 格式化文档
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openrouter:0.0.7@c7d9867337da290e42a09410d8a51a797351d354e199bac0cb16046d927a283c
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1743591506917-source-1743592010519-target
      source: '1743591506917'
      sourceHandle: source
      target: '1743592010519'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1743591979748-source-1743592010519-target
      source: '1743591979748'
      sourceHandle: source
      target: '1743592010519'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1743592010519-source-1743591509641-target
      source: '1743592010519'
      sourceHandle: source
      target: '1743591509641'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1743591509641-source-1743592036447-target
      source: '1743591509641'
      sourceHandle: source
      target: '1743592036447'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1743591487304-source-1743591506917-target
      source: '1743591487304'
      sourceHandle: source
      target: '1743591506917'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1743591487304-source-1743591979748-target
      source: '1743591487304'
      sourceHandle: source
      target: '1743591979748'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: code
      id: 1743591428605-source-1743591487304-target
      source: '1743591428605'
      sourceHandle: source
      target: '1743591487304'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: http-request
      id: 1743591428605-source-1744637839517-target
      source: '1743591428605'
      sourceHandle: source
      target: '1744637839517'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - allowed_file_extensions: []
          allowed_file_types:
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: 待处理文件
          max_length: 48
          options: []
          required: true
          type: file
          variable: target
        - allowed_file_extensions: []
          allowed_file_types:
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: 模板
          max_length: 48
          options: []
          required: true
          type: file
          variable: template
      height: 116
      id: '1743591428605'
      position:
        x: 30
        y: 258
      positionAbsolute:
        x: 30
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import subprocess\nimport os\n\ndef main(template_path: str, target_path:\
          \ str) -> dict:\n    \"\"\"处理 DOC 到 DOCX 的转换（纯路径操作）\"\"\"\n    # 验证输入路径有效性\n\
          \    if not os.path.exists(template_path):\n        raise FileNotFoundError(f\"\
          模板文件不存在：{template_path}\")\n    if not os.path.exists(target_path):\n  \
          \      raise FileNotFoundError(f\"目标文件不存在：{target_path}\")\n\n    # 创建专用临时目录（避免权限冲突）\n\
          \    work_dir = os.path.join(os.path.dirname(target_path), \"docx_convert\"\
          )\n    os.makedirs(work_dir, exist_ok=True)\n    \n    def convert_doc_to_docx(input_path:\
          \ str) -> str:\n        \"\"\"核心转换函数\"\"\"\n        output_name = os.path.splitext(os.path.basename(input_path))[0]\
          \ + \".docx\"\n        output_path = os.path.join(work_dir, output_name)\n\
          \        \n        # 执行转换命令\n        subprocess.run([\n            'libreoffice',\
          \ '--headless', '--convert-to', 'docx',\n            '--outdir', work_dir,\
          \ input_path\n        ], check=True, timeout=30)\n        \n        return\
          \ output_path\n    \n    return {\n        \"template_docx\": convert_doc_to_docx(template_path),\n\
          \        \"target_docx\": convert_doc_to_docx(target_path),\n        \"\
          work_dir\": work_dir  # 传递目录路径供后续节点使用\n    }"
        code_language: python3
        desc: ''
        outputs:
          target_docx:
            children: null
            type: string
          template_docx:
            children: null
            type: string
          work_dir:
            children: null
            type: string
        selected: false
        title: 文件转换节点
        type: code
        variables:
        - value_selector:
          - '1743591428605'
          - template
          - url
          variable: template_path
        - value_selector:
          - '1743591428605'
          - target
          - url
          variable: target_path
      height: 54
      id: '1743591487304'
      position:
        x: 334
        y: 258
      positionAbsolute:
        x: 334
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from docx import Document\nimport json\nimport os\n\ndef main(template_docx_path:\
          \ str) -> dict:\n    \"\"\"从模板 DOCX 提取样式结构\"\"\"\n    # 验证路径可读性\n    if\
          \ not os.access(template_docx_path, os.R_OK):\n        raise PermissionError(f\"\
          无法读取文件：{template_docx_path}\")\n    \n    doc = Document(template_docx_path)\n\
          \    style_data = {\n        \"paragraph_styles\": [],\n        \"font_stats\"\
          : {}\n    }\n    \n    # 提取段落样式特征\n    for para in doc.paragraphs:\n   \
          \     style = {\n            \"text_sample\": para.text[:50],  # 采样前50字符\n\
          \            \"style_name\": para.style.name,\n            \"font_name\"\
          : para.style.font.name,\n            \"font_size\": para.style.font.size.pt\
          \ if para.style.font.size else None,  # 处理字体大小可能为None的情况\n            \"\
          alignment\": str(para.alignment)\n        }\n        style_data[\"paragraph_styles\"\
          ].append(style)\n        \n        # 统计字体使用频率\n        font_key = f\"{para.style.font.name}_{para.style.font.size.pt\
          \ if para.style.font.size else 'unknown_size'}\"\n        style_data[\"\
          font_stats\"][font_key] = style_data[\"font_stats\"].get(font_key, 0) +\
          \ 1\n    \n    # 优化输出结构，增加可读性\n    final_output = {\n        \"template_styles\"\
          : {\n            \"paragraph_styles\": style_data[\"paragraph_styles\"],\n\
          \            \"font_usage_statistics\": style_data[\"font_stats\"]\n   \
          \     }\n    }\n    \n    return {\"template_styles\": json.dumps(final_output,\
          \ ensure_ascii=False)}"
        code_language: python3
        desc: ''
        outputs:
          template_styles:
            children: null
            type: string
        selected: false
        title: 样式提取节点
        type: code
        variables:
        - value_selector:
          - '1743591428605'
          - target
          - url
          variable: template_docx_path
      height: 54
      id: '1743591506917'
      position:
        x: 638
        y: 258
      positionAbsolute:
        x: 638
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from docx import Document\nimport os\nimport shutil\nimport json\n\
          from typing import Dict\n\ndef main(target_docx_path: str, style_rules:\
          \ str) -> dict:\n    \"\"\"将样式规则应用到目标文档，输出位置在目标文档同目录的 formatted_output 文件夹\"\
          \"\"\n    # 自动生成输出目录：目标文档所在目录 + formatted_output 文件夹\n    doc_dir = os.path.dirname(target_docx_path)\n\
          \    output_dir = os.path.join(doc_dir, \"formatted_output\")\n    os.makedirs(output_dir,\
          \ exist_ok=True)  # 创建输出目录，若存在则忽略\n    \n    # 备份原始文件到输出目录\n    doc_name\
          \ = os.path.basename(target_docx_path)\n    backup_path = os.path.join(output_dir,\
          \ \"original_backup.docx\")\n    shutil.copy2(target_docx_path, backup_path)\
          \  # 复制原始文件作为备份\n    \n    try:\n        # 解析样式规则\n        rules: Dict =\
          \ json.loads(style_rules)\n        if \"rules\" not in rules:\n        \
          \    raise ValueError(\"样式规则中未包含 'rules' 字段\")\n        \n        # 加载目标文档并应用样式\n\
          \        doc = Document(target_docx_path)\n        for rule in rules[\"\
          rules\"]:\n            # 校验规则字段完整性\n            required_fields = [\"paragraph_index\"\
          , \"font_name\", \"font_size\", \"alignment\"]\n            for field in\
          \ required_fields:\n                if field not in rule:\n            \
          \        raise KeyError(f\"样式规则中缺失必要字段：{field}\")\n            \n      \
          \      paragraph_index = rule[\"paragraph_index\"]\n            if paragraph_index\
          \ >= len(doc.paragraphs):\n                raise IndexError(f\"段落索引 {paragraph_index}\
          \ 超出文档段落数量\")\n            \n            para = doc.paragraphs[paragraph_index]\n\
          \            # 应用字体样式\n            para.style.font.name = rule[\"font_name\"\
          ]\n            para.style.font.size = rule[\"font_size\"]\n            #\
          \ 应用段落对齐样式\n            para.alignment = rule[\"alignment\"]\n        \n\
          \        # 保存处理后的文档\n        output_path = os.path.join(output_dir, \"formatted.docx\"\
          )\n        doc.save(output_path)\n        \n        return {\n         \
          \   \"formatted_docx\": output_path,  # 处理后文档路径\n            \"backup_path\"\
          : backup_path  # 原始文档备份路径\n        }\n    except (json.JSONDecodeError,\
          \ ValueError, KeyError, IndexError) as e:\n        raise RuntimeError(f\"\
          样式应用过程中发生错误：{str(e)}\")"
        code_language: python3
        desc: ''
        outputs:
          backup_path:
            children: null
            type: string
          formatted_docx:
            children: null
            type: string
        selected: false
        title: 样式应用节点
        type: code
        variables:
        - value_selector:
          - '1743591487304'
          - target_docx
          variable: target_docx_path
        - value_selector:
          - '1743592010519'
          - text
          variable: style_rules
      height: 54
      id: '1743591509641'
      position:
        x: 1246
        y: 258
      positionAbsolute:
        x: 1246
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1743591428605'
          - target
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: deepseek/deepseek-r1-zero:free
          provider: langgenius/openrouter/openrouter
        prompt_template:
        - id: d9d7ee6c-59dd-4074-8070-0659eb9d8ee9
          role: system
          text: '请分析以下文档段落的结构、主题、关键信息：

            {{#1743591428605.target#}}


            输出要求：

            1. 以 JSON 格式呈现，根键为 "paragraph_analysis"。

            2. 每个段落标注序号，包含字段："paragraph_text"（段落原文）、"theme"（主题）、"key_points"（关键信息）。'
        selected: false
        title: 段落分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1743591979748'
      position:
        x: 638
        y: 352
      positionAbsolute:
        x: 638
        y: 352
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1743591506917'
          - template_styles
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: deepseek/deepseek-r1-zero:free
          provider: langgenius/openrouter/openrouter
        prompt_template:
        - id: 511d6da1-a067-4d28-bbdd-27c0f184b220
          role: system
          text: '已知条件：

            1. 模板文档样式：{{#1743591506917.template_styles#}}

            2. 目标文档段落分析结果：{{#1743591979748.text#}}


            任务：

            根据模板样式和段落分析结果，制定目标文档的样式应用策略，确保内容与样式匹配。例如：

            - 标题段落应用特定标题样式；

            - 正文段落匹配模板的字体、字号；

            - 关键信息段落突出显示（如加粗、变色）。


            输出要求：

            1. 以 JSON 格式呈现，根键为 "style_application_strategy"。

            2. 包含字段："paragraph_mapping"（段落序号与样式映射）、"global_style"（全局样式，如默认字体、页边距）。'
        selected: false
        title: 样式决策
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1743592010519'
      position:
        x: 942
        y: 258
      positionAbsolute:
        x: 942
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1743591509641'
          - backup_path
          variable: backup_path
        - value_selector:
          - '1743591509641'
          - formatted_docx
          variable: formatted_docx
        selected: false
        title: 结束
        type: end
      height: 116
      id: '1743592036447'
      position:
        x: 1550
        y: 258
      positionAbsolute:
        x: 1550
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data:
          - file:
            - '1743591428605'
            - target
            id: key-value-1
            type: file
          type: binary
        desc: ''
        headers: ''
        method: get
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP 请求
        type: http-request
        url: ''
        variables: []
      height: 79
      id: '1744637839517'
      position:
        x: 342.85714285714283
        y: 369.71428571428567
      positionAbsolute:
        x: 342.85714285714283
        y: 369.71428571428567
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 0
      y: -1
      zoom: 0.7
